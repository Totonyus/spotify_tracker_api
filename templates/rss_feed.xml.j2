<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:slash="http://purl.org/rss/1.0/modules/slash/">

    <channel>
        <title>Spotify Tracker</title>
        <atom:link href="{{ api.get_parameters().get("application_url") }}/static/feed" rel="self"
                   type="application/rss+xml"/>
        <link>{{ api.get_parameters().get("application_url") }}</link>
        <description>The rss feed to follow your artists and podcasts releases</description>
        <lastBuildDate>{{ datetime.now() }}</lastBuildDate>
        <language>en-US</language>
        <image>
            <url>{{ api.get_parameters().get("application_url") }}/static/favicon.ico</url>
            <title>Spotify tracker</title>
            <link>{{ api.get_parameters().get("application_url") }}</link>
            <width>32</width>
            <height>32</height>
        </image>
        {% for item in releases %}
            {% set artists= item.get('artists') | map(attribute='name') | list | join(', ') %}
            <item>
                <title>{{ item.get("artists")[0].get("name") }} - {{ item.get("name") }}</title>
                <link>{{ item.get('external_urls').get('spotify') }}</link>
                <pubDate>{{ datetime.fromtimestamp(item.get(api.get_parameters().get("default_sorting"))) }}</pubDate>
                <category>Release</category>
                <guid isPermaLink="false">release_{{ item.get("id") }}</guid>
                <author>Spotify tracker api</author>
                <description>
                    New {{ item.get("album_group") }} with {{ item.get("total_tracks") }} tracks. Featuring {{ artists }}.'
                </description>
                <content:encoded>
                    <![CDATA[
                    <p>New {{ item.get("album_group") }} with {{ item.get("total_tracks") }} tracks. Featuring {{ artists }}.</p>
                    </p><img decoding="async" src="{{ item.get('images')[1].get('url') | default('') }}"/></p>
                    ]]>
                </content:encoded>
            </item>
        {%- endfor -%}
        {%- for item in episodes -%}
            <item>
                <title>{{ item.get("name") }}</title>
                <link>{{ item.get('external_urls').get('spotify') }}</link>
                <pubDate>{{ datetime.fromtimestamp(item.get(api.get_parameters().get("default_sorting"))) }}</pubDate>
                <category>Episode</category>
                <guid isPermaLink="false">episode_{{ item.get("id") }}</guid>
                <author>Spotify tracker api</author>
                <description>
                    {{ item.get("description") }}
                </description>
                <content:encoded>
                    <![CDATA[
                    <p>New episode of {{ (item.get("duration_ms") / 1000 / 60) | round(0) | int }} minutes. Description : {{ item.get("description") }}</p>
                    <p><img decoding="async" src="{{ item.get('images')[1].get('url') | default('') }}"/></p>
                    ]]>
                </content:encoded>
            </item>
        {% endfor %}
    </channel>
</rss>